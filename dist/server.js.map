{"version":3,"sources":["../server/server.js"],"names":["app","install","use","static","json","db","get","req","res","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","collection","find","toArray","then","issues","metadata","total_count","length","_metadata","records","catch","error","console","log","message","issueId","params","id","_id","limit","next","issue","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","result","insertedId","savedIssue","set","sendFile","resolve","connect","connection","listen"],"mappings":"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","file":"server.js","sourcesContent":["/**\n * Created by Angel on 6/19/17.\n */\n\n\nimport SourceMapSupport from 'source-map-support';\nimport 'babel-polyfill';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient, ObjectID } from 'mongodb';\nimport path from 'path';\nimport Issue from './issue.js';\n\nconst app = express();\n\nSourceMapSupport.install();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\n\nlet db;\n\napp.get('/api/issues', (req, res) => {\n  const filter = {};\n  if (req.query.status) filter.status = req.query.status;\n  if (req.query.effort_lte || req.query.effort_gte) filter.effort = {};\n  if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n  if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\n\n  db.collection('issues').find(filter).toArray().then((issues) => {\n    const metadata = { total_count: issues.length };\n    res.json({ _metadata: metadata, records: issues });\n  })\n      .catch((error) => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n      });\n});\n\napp.get('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    issueId = new ObjectID(req.params.id);\n  } catch (error) {\n    res.status(422).json({\n      message: `Invalid issue ID format: ${error}`,\n    });\n    return;\n  }\n\n  db.collection('issues').find({ _id: issueId }).limit(1).next()\n      .then((issue) => {\n        if (!issue) {\n          res.status(404).json({ message: `No such issue: ${issueId}` });\n        } else {\n          res.json(issue);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n      });\n});\n\napp.post('/api/issues', (req, res) => {\n  const newIssue = req.body;\n  newIssue.created = new Date();\n\n  if (!newIssue.status) {\n    newIssue.status = 'New';\n  }\n\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result =>\n        db.collection('issues').find({ _id: result.insertedId }).limit(1).next(),\n    ).then((savedIssue) => {\n      res.json(savedIssue);\n    })\n      .catch((error) => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n      });\n});\n\napp.set('json spaces', 4);\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve('static/index.html'));\n});\n\n\nMongoClient.connect('mongodb://localhost/issuetracker').then((connection) => {\n  db = connection;\n\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n}).catch((error) => {\n  console.log('ERROR: ', error);\n});\n\n"]}