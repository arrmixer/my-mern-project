{"version":3,"sources":["../server/server.js"],"names":["app","use","static","json","get","req","res","db","collection","find","toArray","then","metadata","total_count","issues","length","_metadata","records","catch","console","log","error","status","message","post","newIssue","body","created","Date","err","validateIssue","insertOne","_id","result","insertedId","limit","next","set","connect","connection","listen"],"mappings":";;AAMA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA,IAAMA,MAAM,wBAAZ,C,CAZA;;;;AAcAA,IAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAGAH,IAAII,GAAJ,CAAQ,aAAR,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCC,OAAGC,UAAH,CAAc,QAAd,EAAwBC,IAAxB,GAA+BC,OAA/B,GAAyCC,IAAzC,CAA8C,kBAAU;AACpD,YAAMC,WAAW,EAAEC,aAAaC,OAAOC,MAAtB,EAAjB;AACAT,YAAIH,IAAJ,CAAS,EAAEa,WAAWJ,QAAb,EAAuBK,SAASH,MAAhC,EAAT;AACH,KAHD,EAGGI,KAHH,CAGS,iBAAS;AACdC,gBAAQC,GAAR,CAAYC,KAAZ;AACAf,YAAIgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,qCAAmCF,KAArC,EAArB;AACH,KAND;AAQH,CATD;;AAWArB,IAAIwB,IAAJ,CAAS,aAAT,EAAwB,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAClC,QAAMmB,WAAWpB,IAAIqB,IAArB;AACAD,aAASE,OAAT,GAAmB,IAAIC,IAAJ,EAAnB;;AAEA,QAAI,CAACH,SAASH,MAAd,EAAqB;AACjBG,iBAASH,MAAT,GAAkB,KAAlB;AACH;;AAED,QAAMO,MAAM,gBAAMC,aAAN,CAAoBL,QAApB,CAAZ;AACA,QAAII,GAAJ,EAAQ;AACJvB,YAAIgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,+BAA6BM,GAA/B,EAArB;AACA;AACH;;AAEDtB,OAAGC,UAAH,CAAc,QAAd,EAAwBuB,SAAxB,CAAkCN,QAAlC,EAA4Cd,IAA5C,CAAiD;AAAA,eAC7CJ,GAAGC,UAAH,CAAc,QAAd,EAAwBC,IAAxB,CAA6B,EAAEuB,KAAKC,OAAOC,UAAd,EAA7B,EAAwDC,KAAxD,CAA8D,CAA9D,EAAiEC,IAAjE,EAD6C;AAAA,KAAjD,EAEEzB,IAFF,CAEO,oBAAY;AACfL,YAAIH,IAAJ,CAASsB,QAAT;AACH,KAJD,EAIGP,KAJH,CAIS,iBAAS;AACdC,gBAAQC,GAAR,CAAYC,KAAZ;AACAf,YAAIgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,qCAAmCF,KAArC,EAArB;AACH,KAPD;AAQH,CAtBD;;AAwBArB,IAAIqC,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;;AAEA,IAAI9B,WAAJ;AACA,qBAAY+B,OAAZ,CAAoB,kCAApB,EAAwD3B,IAAxD,CAA6D,sBAAc;AACvEJ,SAAKgC,UAAL;;AAEAvC,QAAIwC,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnBrB,gBAAQC,GAAR,CAAY,0BAAZ;AACH,KAFD;AAGH,CAND,EAMGF,KANH,CAMS,iBAAS;AACdC,YAAQC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACH,CARD","file":"server.js","sourcesContent":["/**\n * Created by Angel on 6/19/17.\n */\n\n\n\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\nimport Issue from './issue.js';\nimport 'babel-polyfill';\n\nconst app = express();\n\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\n\napp.get('/api/issues', (req, res) => {\n    db.collection('issues').find().toArray().then(issues => {\n        const metadata = { total_count: issues.length };\n        res.json({ _metadata: metadata, records: issues});\n    }).catch(error => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}`});\n    })\n\n});\n\napp.post('/api/issues', (req, res) => {\n    const newIssue = req.body;\n    newIssue.created = new Date();\n\n    if (!newIssue.status){\n        newIssue.status = 'New';\n    }\n\n    const err = Issue.validateIssue(newIssue);\n    if (err){\n        res.status(422).json({ message: `Invalid request: ${err}`});\n        return;\n    }\n\n    db.collection('issues').insertOne(newIssue).then(result => \n        db.collection('issues').find({ _id: result.insertedId}).limit(1).next()\n    ).then(newIssue => {\n        res.json(newIssue);\n    }).catch(error => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}`});\n    });\n});\n\napp.set('json spaces', 4);\n\nlet db;\nMongoClient.connect('mongodb://localhost/issuetracker').then(connection => {\n    db = connection;\n\n    app.listen(3000, () => {\n        console.log(\"App started on port 3000\");\n    });\n}).catch(error => {\n    console.log('ERROR: ', error);\n});\n\n"]}