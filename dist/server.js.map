{"version":3,"sources":["../server/server.js"],"names":["app","install","use","static","json","db","get","req","res","collection","find","toArray","then","issues","metadata","total_count","length","_metadata","records","catch","error","console","log","status","message","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","result","_id","insertedId","limit","next","savedIssue","set","connect","connection","listen"],"mappings":";;AAKA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAVA;;;;AAYA,MAAMA,MAAM,wBAAZ;;AAEA,2BAAiBC,OAAjB;AACAD,IAAIE,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAH,IAAIE,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAGA,IAAIC,EAAJ;;AAEAL,IAAIM,GAAJ,CAAQ,aAAR,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnCH,KAAGI,UAAH,CAAc,QAAd,EAAwBC,IAAxB,GAA+BC,OAA/B,GAAyCC,IAAzC,CAA+CC,MAAD,IAAY;AACxD,UAAMC,WAAW,EAAEC,aAAaF,OAAOG,MAAtB,EAAjB;AACAR,QAAIJ,IAAJ,CAAS,EAAEa,WAAWH,QAAb,EAAuBI,SAASL,MAAhC,EAAT;AACD,GAHD,EAIKM,KAJL,CAIYC,KAAD,IAAW;AAChBC,YAAQC,GAAR,CAAYF,KAAZ;AACAZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,0BAAyBJ,KAAM,EAA3C,EAArB;AACD,GAPL;AAQD,CATD;;AAWApB,IAAIyB,IAAJ,CAAS,aAAT,EAAwB,CAAClB,GAAD,EAAMC,GAAN,KAAc;AACpC,QAAMkB,WAAWnB,IAAIoB,IAArB;AACAD,WAASE,OAAT,GAAmB,IAAIC,IAAJ,EAAnB;;AAEA,MAAI,CAACH,SAASH,MAAd,EAAsB;AACpBG,aAASH,MAAT,GAAkB,KAAlB;AACD;;AAED,QAAMO,MAAM,gBAAMC,aAAN,CAAoBL,QAApB,CAAZ;AACA,MAAII,GAAJ,EAAS;AACPtB,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,oBAAmBM,GAAI,EAAnC,EAArB;AACA;AACD;;AAEDzB,KAAGI,UAAH,CAAc,QAAd,EAAwBuB,SAAxB,CAAkC,gBAAMC,YAAN,CAAmBP,QAAnB,CAAlC,EAAgEd,IAAhE,CAAqEsB,UAC/D7B,GAAGI,UAAH,CAAc,QAAd,EAAwBC,IAAxB,CAA6B,EAAEyB,KAAKD,OAAOE,UAAd,EAA7B,EAAyDC,KAAzD,CAA+D,CAA/D,EAAkEC,IAAlE,EADN,EAEI1B,IAFJ,CAEU2B,UAAD,IAAgB;AACrB/B,QAAIJ,IAAJ,CAASmC,UAAT;AACD,GAJH,EAKKpB,KALL,CAKYC,KAAD,IAAW;AAChBC,YAAQC,GAAR,CAAYF,KAAZ;AACAZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,0BAAyBJ,KAAM,EAA3C,EAArB;AACD,GARL;AASD,CAvBD;;AAyBApB,IAAIwC,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;;AAGA,qBAAYC,OAAZ,CAAoB,kCAApB,EAAwD7B,IAAxD,CAA8D8B,UAAD,IAAgB;AAC3ErC,OAAKqC,UAAL;;AAEA1C,MAAI2C,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACrBtB,YAAQC,GAAR,CAAY,0BAAZ;AACD,GAFD;AAGD,CAND,EAMGH,KANH,CAMUC,KAAD,IAAW;AAClBC,UAAQC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACD,CARD","file":"server.js","sourcesContent":["/**\n * Created by Angel on 6/19/17.\n */\n\n\nimport SourceMapSupport from 'source-map-support';\nimport 'babel-polyfill';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\nimport Issue from './issue.js';\n\nconst app = express();\n\nSourceMapSupport.install();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\n\nlet db;\n\napp.get('/api/issues', (req, res) => {\n  db.collection('issues').find().toArray().then((issues) => {\n    const metadata = { total_count: issues.length };\n    res.json({ _metadata: metadata, records: issues });\n  })\n      .catch((error) => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n      });\n});\n\napp.post('/api/issues', (req, res) => {\n  const newIssue = req.body;\n  newIssue.created = new Date();\n\n  if (!newIssue.status) {\n    newIssue.status = 'New';\n  }\n\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result =>\n        db.collection('issues').find({ _id: result.insertedId }).limit(1).next(),\n    ).then((savedIssue) => {\n      res.json(savedIssue);\n    })\n      .catch((error) => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n      });\n});\n\napp.set('json spaces', 4);\n\n\nMongoClient.connect('mongodb://localhost/issuetracker').then((connection) => {\n  db = connection;\n\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n}).catch((error) => {\n  console.log('ERROR: ', error);\n});\n\n"]}