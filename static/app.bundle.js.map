{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/IssueAdd.jsx"],"names":["contentNode","document","getElementById","render","module","hot","accept","IssueRow","props","issue","_id","status","owner","created","toDateString","effort","completionDate","title","IssueTable","issueRows","issues","map","IssueList","state","createIssue","bind","loadData","fetch","then","response","ok","json","console","log","data","_metadata","total_count","records","forEach","Date","setState","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","Data","newIssues","concat","Component","IssueFilter","IssueAdd","handleSubmit","e","preventDefault","form","forms","issueAdd","value"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport IssueList from './IssueList.jsx';\n\nconst contentNode = document.getElementById('contents');\nReactDOM.render(<IssueList/>, contentNode);\n\nif (module.hot){\n    module.hot.accept();\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\nimport 'whatwg-fetch';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueAdd from './IssueAdd.jsx';\n\nconst IssueRow = (props) => (\n    <tr>\n        <td>{props.issue._id}</td>\n        <td>{props.issue.status}</td>\n        <td>{props.issue.owner}</td>\n        <td>{props.issue.created.toDateString()}</td>\n        <td>{props.issue.effort}</td>\n        <td>{props.issue.completionDate ? props.issue.completionDate.toDateString() : ' '}</td>\n        <td>{props.issue.title}</td>\n    </tr>\n)\n\nfunction IssueTable(props) {\n    const issueRows = props.issues.map(issue => <IssueRow key={issue._id} issue={issue}/>)\n    return (\n        <table className=\"bordered-table\">\n            <thead>\n            <tr>\n                <th>Id</th>\n                <th>Status</th>\n                <th>Owner</th>\n                <th>Created</th>\n                <th>Effort</th>\n                <th>Completion</th>\n                <th>Title</th>\n            </tr>\n            </thead>\n            <tbody>{issueRows}</tbody>\n        </table>\n    );\n}\n\nexport default class IssueList extends React.Component {\n    constructor() {\n        super();\n        this.state = { issues: [] };\n\n        this.createIssue = this.createIssue.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        fetch('/api/issues').then(response => {\n            if (response.ok) {\n                response.json().then(data => {\n                    console.log(\"Total count of records: \", data._metadata.total_count);\n                    data.records.forEach(issue => {\n                        issue.created = new Date(issue.created);\n                        if (issue.completionDate)\n                            issue.completionDate = new Date(issue.completionDate);\n                    });\n                    this.setState({issues: data.records});\n                });\n            } else {\n                response.json().then(error => {\n                    alert(\"Failed to fetch issues: \" + error.message);\n                });\n            }\n        }).catch(err => {\n            alert(\"Error in fetching data from server: \", err);\n        });\n    }\n\n    createIssue(newIssue) {\n        fetch('/api/issues', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newIssue),\n        }).then(response => {\n            if (response.ok) {\n                response.json().then(updatedIssue => {\n                    updatedIssue.created = new Date(updatedIssue.created);\n                    if (updatedIssue.completionDate)\n                        updatedIssue.completionDate = new Data(updatedIssue.completionDate);\n                    const newIssues = this.state.issues.concat(updatedIssue);\n                    this.setState({issues: newIssues});\n                });\n            } else {\n                response.json().then(error => {\n                    alert(\"Failed to add issue: \" + error.message);\n                });\n            }\n        }).catch(err => {\n            alert(\"Error in sending data to server: \" + err.message);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Issue Tracker</h1>\n                <IssueFilter />\n                <hr />\n                <IssueTable issues={this.state.issues}/>\n                <hr />\n                <IssueAdd createIssue={this.createIssue}/>\n            </div>\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx","import React from 'react';\n\nexport default class IssueFilter extends React.Component {\n    render() {\n        return (\n            <div>This is a placeholder for the Issue Filter.</div>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/IssueFilter.jsx","import React from 'react';\n\n\nexport default class IssueAdd extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        var form = document.forms.issueAdd;\n        this.props.createIssue({\n            owner: form.owner.value,\n            title: form.title.value,\n            status: \"New\",\n            created: new Date(),\n\n        });\n        // clear the form for the next input\n        form.owner.value = \" \";\n        form.title.value = \" \";\n    }\n\n    render() {\n        return (\n            <div>\n                <form name=\"issueAdd\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"owner\" placeholder=\"Owner\"/>\n                    <input type=\"text\" name=\"title\" placeholder=\"Title\"/>\n                    <button>Add</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAdd.jsx"],"sourceRoot":""}